buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.study'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
}

dependencies {
    // monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // jdbc
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // spring boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    // db
    runtimeOnly 'com.h2database:h2'
    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    // queryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor(
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

}

// queryDSL
def querydslDir = "$buildDir/generated"

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslDefault = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
compileQuerydsl.doFirst {
    if (file(querydslDir))
        delete(file(querydslDir))
}
tasks.withType(JavaCompile){
    options.generatedSourceOutputDirectory = file(querydslDir)
}
clean.doLast {
    delete file(querydslDir)
}

tasks.named('test') {
    useJUnitPlatform()
}
